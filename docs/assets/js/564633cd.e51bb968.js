"use strict";(self.webpackChunkkotestdocs=self.webpackChunkkotestdocs||[]).push([[96756],{3905:(t,e,a)=>{a.d(e,{Zo:()=>d,kt:()=>u});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function o(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function l(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?o(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function i(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},o=Object.keys(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)a=o[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var s=n.createContext({}),m=function(t){var e=n.useContext(s),a=e;return t&&(a="function"==typeof t?t(e):l(l({},e),t)),a},d=function(t){var e=m(t.components);return n.createElement(s.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),c=m(a),u=r,h=c["".concat(s,".").concat(u)]||c[u]||p[u]||o;return a?n.createElement(h,l(l({ref:e},d),{},{components:a})):n.createElement(h,l({ref:e},d))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=a.length,l=new Array(o);l[0]=c;var i={};for(var s in e)hasOwnProperty.call(e,s)&&(i[s]=e[s]);i.originalType=t,i.mdxType="string"==typeof t?t:r,l[1]=i;for(var m=2;m<o;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},57943:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var n=a(87462),r=(a(67294),a(3905));const o={title:"JSON",slug:"json-overview.html",sidebar_label:"Overview"},l=void 0,i={unversionedId:"assertions/json/overview",id:"version-5.8/assertions/json/overview",title:"JSON",description:'To use these matchers add testImplementation("io.kotest.extensions") to your build.',source:"@site/versioned_docs/version-5.8/assertions/json/overview.md",sourceDirName:"assertions/json",slug:"/assertions/json/json-overview.html",permalink:"/docs/assertions/json/json-overview.html",draft:!1,editUrl:"https://github.com/kotest/kotest/blob/master/documentation/versioned_docs/version-5.8/assertions/json/overview.md",tags:[],version:"5.8",frontMatter:{title:"JSON",slug:"json-overview.html",sidebar_label:"Overview"},sidebar:"assertions",previous:{title:"Collections",permalink:"/docs/assertions/collection-matchers.html"},next:{title:"Overview",permalink:"/docs/assertions/json/json-overview.html"}},s={},m=[{value:"Basic matchers",id:"basic-matchers",level:2},{value:"Content-based matching",id:"content-based-matching",level:2},{value:"Schema validation",id:"schema-validation",level:2}],d={toc:m};function p(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"To use these matchers add ",(0,r.kt)("inlineCode",{parentName:"p"},'testImplementation("io.kotest.extensions:kotest-assertions-json:<version>")')," to your build. "),(0,r.kt)("h2",{id:"basic-matchers"},"Basic matchers"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Matcher"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Targets"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"shouldBeValidJson")),(0,r.kt)("td",{parentName:"tr",align:null},"verifies that a given string parses to valid json"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"shouldBeJsonObject")),(0,r.kt)("td",{parentName:"tr",align:null},"asserts that a string is a valid JSON ",(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"object"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"shouldBeJsonArray")),(0,r.kt)("td",{parentName:"tr",align:null},"asserts that a string is a valid JSON ",(0,r.kt)("strong",{parentName:"td"},(0,r.kt)("em",{parentName:"strong"},"array"))),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")))),(0,r.kt)("h2",{id:"content-based-matching"},"Content-based matching"),(0,r.kt)("p",null,"For more details, see ",(0,r.kt)("a",{parentName:"p",href:"content-json-matchers.html"},"here")," or follow matcher-specific links below"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Matcher"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Targets"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"content-json-matchers.html#shouldequaljson"},"shouldEqualJson")),(0,r.kt)("td",{parentName:"tr",align:null},"Verifies that a String matches a given JSON structure."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"content-json-matchers.html#shouldequalspecifiedjson"},"shouldEqualSpecifiedJson")),(0,r.kt)("td",{parentName:"tr",align:null},"Verifies that a String matches a given JSON structure, but allows additional unspecified properties."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"content-json-matchers.html#shouldcontainjsonkey"},"shouldContainJsonKey")),(0,r.kt)("td",{parentName:"tr",align:null},"Verifies that a String is JSON, and contains a given JSON path"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JVM")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"content-json-matchers.html#shouldcontainjsonkey"},"shouldContainJsonKeyValue")),(0,r.kt)("td",{parentName:"tr",align:null},"Verifies that a String is JSON, and contains a given JSON path with the specified value"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JVM")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"content-json-matchers.html#shouldcontainjsonkey"},"shouldMatchJsonResource")),(0,r.kt)("td",{parentName:"tr",align:null},"Verifies that a String is matches the JSON content of a given test resource"),(0,r.kt)("td",{parentName:"tr",align:"left"},"JVM")))),(0,r.kt)("h2",{id:"schema-validation"},"Schema validation"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Matcher"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Targets"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"json-schema-matchers.html"},"shouldMatchSchema")),(0,r.kt)("td",{parentName:"tr",align:null},"Validates that a ",(0,r.kt)("inlineCode",{parentName:"td"},"String")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"kotlinx.serialization.JsonElement")," matches a ",(0,r.kt)("inlineCode",{parentName:"td"},"JsonSchema"),". See description below for details on constructing schemas."),(0,r.kt)("td",{parentName:"tr",align:"left"},"Multiplatform")))))}p.isMDXComponent=!0}}]);